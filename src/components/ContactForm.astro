<div
  class="mx-auto rounded-lg border border-gray-200 bg-gray-100 p-6 text-gray-900 md:p-10"
>
  <h3 class="w-full text-center text-2xl font-semibold">Contact Me</h3>
  <form
    action="https://usebasin.com/f/655d66fef588"
    method="POST"
    id="contact-form"
    name="contact form"
    class="mt-4 flex flex-col gap-3"
  >
    <input type="hidden" name="form-name" value="contact" />
    <div>
      <label for="contact-name" class="mb-1 text-gray-600">Name</label>
      <input
        type="text"
        class="form__input"
        name="name"
        id="contact-name"
        placeholder="Your preferred name"
        required
      />
    </div>
    <!-- honeypot field to catch bots. Purposefully mispelled "email" as "emai" to better trick bots -->
    <label for="emai" class="sr-only">Real users skip this field</label>
    <input id="emai" type="text" name="emai" class="sr-only" tabindex="-1" />
    <div>
      <label for="contact-email" class="mb-1 text-gray-600">Email</label>
      <input
        type="email"
        class="form__input"
        name="email"
        id="contact-email"
        inputmode="email"
        placeholder="Your best contact email"
        required
      />
    </div>
    <div>
      <label for="contact-message" class="text-gray-600">Messaggio</label>
      <textarea
        name="message"
        class="form__input"
        id="contact-message"
        rows="4"
        placeholder="write your message here"
        required></textarea>
    </div>
    <button
      type="submit"
      class="flex items-center justify-center gap-2 rounded-md bg-blue-600 p-2.5 text-white transition hover:bg-blue-700 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-600 focus-visible:ring-opacity-50"
    >
      <!-- your loading SVG here with id="form-loading" -->
      <svg
        id="form-loading"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        class="icon icon-tabler icons-tabler-outline icon-tabler-loader-2 hidden size-5 animate-spin"
      >
        <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
        <path d="M12 3a9 9 0 1 0 9 9"></path>
      </svg>
      Submit
    </button>
  </form>

  <!-- message send success feedback -->
  <dialog
    id="form-good-feedback"
    class="invisible fixed bottom-4 z-10 mx-auto flex rounded-lg bg-green-200 p-0 text-green-800 opacity-0 transition duration-300"
  >
    <div class="p-4 text-center">
      <p>Messaggio inviato correttamemte, ti risponderemo appena possibile</p>
    </div>
  </dialog>

  <!-- message send fail feedback -->
  <dialog
    id="form-bad-feedback"
    class="invisible fixed bottom-4 z-10 mx-auto flex rounded-lg bg-red-200 p-0 text-red-800 opacity-0 transition duration-300"
  >
    <div class="p-4 text-center">
      <p>Qualcosa Ã¨ andato storto. Per favore riprova o contattaci via mail.</p>
    </div>
  </dialog>
</div>

<style>
.form__input {
  @apply w-full rounded-md border border-transparent bg-gray-200 p-2.5 transition;
  @apply focus-visible:border-blue-600/70 focus-visible:ring-2 focus-visible:ring-blue-600 focus-visible:ring-opacity-50;
}
</style>

<script>
  // handle the form submission
  var xhr = new XMLHttpRequest();

  // only one contact form supported per page
  const form = document.getElementById("contact-form") as HTMLFormElement;
  const formLoadingIndicator = document.getElementById("form-loading");
  const formGoodFeedback = document.getElementById("form-good-feedback");
  const formBadFeedback = document.getElementById("form-bad-feedback");

  const handleFormSubmission = (event: any) => {
    // prevent page from reloading
    event.preventDefault();

    // show loading indicator
    formLoadingIndicator?.classList.remove("hidden");

    // get form data
    const formData = new FormData(form);

    // create POST request to the form action attribute
    xhr.open("POST", form.action, true);

    // make sure we receive json back
    xhr.setRequestHeader("Accept", "application/json");

    // SEND IT!
    xhr.send(formData);

    // once we get a response...
    xhr.onload = function () {
      formLoadingIndicator?.classList.add("hidden");
      const response = JSON.parse(xhr.response);

      if (xhr.status === 200) {
        // The request was successful
        console.log("Form submitted successfully.");
        // reset form on successful email send
        form?.reset();

        if (formGoodFeedback) {
          formGoodFeedback.classList.remove("invisible");
          formGoodFeedback.classList.add("opacity-100");

          // reset form feedback after a few seconds
          setTimeout(() => {
            formGoodFeedback.classList.remove("opacity-100");

            setTimeout(() => {
              formGoodFeedback.classList.add("invisible");
            }, 300);
          }, 5000);
        }
      } else {
        const message = "Form submission failed with error: " + response.error;
        console.log(message);
        // The request failed
        if (formBadFeedback) {
          formBadFeedback.classList.remove("invisible");
          formBadFeedback.classList.add("opacity-100");

          // reset form feedback after a few seconds
          setTimeout(() => {
            formBadFeedback.classList.remove("opacity-100");

            setTimeout(() => {
              formBadFeedback.classList.add("invisible");
            }, 300);
          }, 7000);
        }
      }
    };
  };

  form?.addEventListener("submit", handleFormSubmission, true);
</script>