---
export const prerender = true;
import { sanityClient } from 'sanity:client';
import MainLayout from '../../../../layouts/MainLayout.astro';
import { capitalize } from "../../../../utils"
import Breadcrumbs from '../../../../components/Breadcrumbs.astro';
import LatestBox from '../../../../components/LatestBox';

export async function getStaticPaths() {
  const locations = await sanityClient.fetch(
    `*[_type == "locations" && defined(slug.current)]`
  );
  return locations.map((locate: any) => {
    return {
      params: {
        locations_id: locate.slug.current,
      },
    };
  });
}

const { locations_id } = Astro.params;
const related = await sanityClient.fetch(
  `*[_type == "listings" && references(*[_type == 'locations' && slug.current == $locations_id]._id)]{
    title,
    excerpt,
    description,
    code,
    text,
    "slug": slug.current,
    "image": mainImage.asset -> url,
    "district": district -> {title,"slug": slug.current, "zone": zone -> {title,"slug": slug.current, "image": image.asset -> url}},
    renting,
    rentPrice,
    selling,
    sellPrice,
    various,
    }`,
    { locations_id }
  );

  const zone = await sanityClient.fetch(`*[_type == "locations" && slug.current == $locations_id][0]{
    title,
    "slug": slug.current,
    "image": image.asset -> url,
    "total": count(*[_type == 'listings' && references(*[_type == 'locations' && slug.current == $locations_id]._id)])
    
  }`, { locations_id})
---

<MainLayout 
  title={capitalize(locations_id)} 
  description=`Esplora gli immobili in vendita nella zona: ${zone.title}`
  keywords=`${zone.title}, Fine Living Immobiliare` 
  robots='allow'
  ogTitle=`${capitalize(locations_id)} | Fine Living Immobiliare`
  ogDescription=`Esplora gli immobili in vendita nella zona: ${zone.title}`
  ogType='website'
  ogUrl='/immobili/' 
>

  <div class="flex flex-col mx-10 lg:mx-20 mt-20 mb-32">
    <Breadcrumbs firstTitle='Immobili' firstSlug='immobili' secondTitle={zone.title} secondSlug={zone.slug} optional='zone/quartieri/' />
    <h1 class="font-headings text-3xl flex flex-col">Immobili nella Zona: <span class="text-4xl mt-1 underline text-secondary">{zone.title}</span></h1>
    <p class="mt-10 font-semibold bg-secondary/90 w-fit py-2 px-3 rounded-xl text-white">Immobili Totali: <span class="mx-2 font-bold underline underline-offset-2">{zone.total}</span></p>
    <div class="flex flex-col gap-8 justify-center items-center my-32">
      {
        related.map((post: any) => {
          return (
            <LatestBox 
              title={post.title} 
              excerpt={post.excerpt}
              image={post.image},
              description={post.description}
              slug={post.slug}
              code={post.code}
              baths={post.various.bath}
              rooms={post.various.rooms}
              area={post.various.area}
              selling={post.selling}
              sellPrice={post.sellPrice}
              renting={post.renting}
              rentPrice={post.rentPrice}
            />
          )
        })
      }
    </div>
  </div>


</MainLayout>